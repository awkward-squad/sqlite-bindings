- Make accurate safe/unsafe bindings
- Expose compile-time options as flags
  - https://www.sqlite.org/compile.html
- Figure out versioning scheme
  - thinking: sqlite major version + pvp, e.g. 39.
- Make low-level haskellified wrapper (called `sqlite3`)?
- auto extension xEntryPoint fiasco
- make sure all pure funcs don't have IO
- objects
- sqlite-bindings: what to do about CInt result code?
- sqlite-bindings: don't export SQLITE_OPEN_ flags? (what about VFS-only)
- rename repo sqlite3-bindings
- is there a decodeUtf8 :: ShortByteString -> Text?
- test all functions
- sqlite-bindings: look over exported constants
- sqlite-bindings: higher-level object records
- sqlite-bindings: allow (some) callbacks to throw exceptions? (e.g. exec)
- sqlite-bindings: exec callback: cache column names
- sqlite extensions e.g. carray?
- delete malloc(64), realloc(64)? (and free?)

question: do we want to support providing your own system sqlite (not bundled)?
  - seems like we do, but it might be more annoying to write this package. more cabal flags and less guarantees, etc.

question: are cabal flags the right mechanism for optional apis?
  - downside: libraries that build on top need to duplicate these flags if they want to build on the optional apis
